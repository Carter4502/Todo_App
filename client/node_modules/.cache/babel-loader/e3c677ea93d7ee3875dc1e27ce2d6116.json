{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carte\\\\Desktop\\\\Programs\\\\pern-todo\\\\client\\\\src\\\\components\\\\ListTodos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport EditTodo from './EditTodo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListTodos = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const deleteTodo = async id => {\n    try {\n      const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\n        method: \"DELETE\"\n      });\n      setTodos(todos.filter(todo => todo.todo_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getTodos = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/todos\");\n      const jsonData = await response.json();\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: todo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(EditTodo, {\n              todo: todo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteTodo(todo.todo_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, todo.todo_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTodos, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = ListTodos;\nexport default ListTodos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodos\");","map":{"version":3,"sources":["C:/Users/carte/Desktop/Programs/pern-todo/client/src/components/ListTodos.js"],"names":["React","useEffect","useState","EditTodo","ListTodos","todos","setTodos","deleteTodo","id","fetch","method","filter","todo","todo_id","err","console","error","message","getTodos","response","jsonData","json","map","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAjC;;AACA,QAAMK,UAAU,GAAG,MAAMC,EAAN,IAAY;AAC3B,QAAI;AACA,YAAMD,UAAU,GAAG,MAAME,KAAK,CAAE,+BAA8BD,EAAG,EAAnC,EAAsC;AAChEE,QAAAA,MAAM,EAAE;AADwD,OAAtC,CAA9B;AAGAJ,MAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiBL,EAAtC,CAAD,CAAR;AACH,KALD,CAKE,OAAOM,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACJ,GATD;;AAUA,QAAMC,QAAQ,GAAG,YAAW;AACxB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAC,6BAAD,CAA5B;AACA,YAAMW,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAvB;AACAf,MAAAA,QAAQ,CAACc,QAAD,CAAR;AACH,KAJD,CAIE,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACJ,GARD;;AASAhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACA;AAAA,2BACA;AAAO,MAAA,SAAS,EAAC,wBAAjB;AAAA,8BACA;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAQA;AAAA,kBACKb,KAAK,CAACiB,GAAN,CAAUV,IAAI,iBACX;AAAA,kCACI;AAAA,sBAAKA,IAAI,CAACW;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,mCAAI,QAAC,QAAD;AAAU,cAAA,IAAI,EAAEX;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,mCAAI;AAAQ,cAAA,SAAS,EAAC,gBAAlB;AAAmC,cAAA,OAAO,EAAE,MAAML,UAAU,CAACK,IAAI,CAACC,OAAN,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAASD,IAAI,CAACC,OAAd;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADA;AAqBH,CA9CD;;GAAMT,S;;KAAAA,S;AA+CN,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport EditTodo from './EditTodo';\r\n\r\nconst ListTodos = () => {\r\n    const[todos, setTodos] = useState([]);\r\n    const deleteTodo = async id => {\r\n        try {\r\n            const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\r\n                method: \"DELETE\"\r\n            });\r\n            setTodos(todos.filter(todo => todo.todo_id !== id));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n    const getTodos = async() => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/todos\");\r\n            const jsonData = await response.json();\r\n            setTodos(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getTodos();\r\n    }, [])\r\n\r\n    return( \r\n    <div>\r\n    <table className=\"table mt-5 text-center\">\r\n    <thead>\r\n      <tr>\r\n        <th>Description</th>\r\n        <th>Edit</th>\r\n        <th>Delete</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n        {todos.map(todo => (\r\n            <tr key={todo.todo_id}>\r\n                <td>{todo.description}</td>\r\n                <td><EditTodo todo={todo} /></td>\r\n                <td><button className=\"btn btn-danger\" onClick={() => deleteTodo(todo.todo_id)}>Delete</button></td>\r\n            </tr>\r\n        ))}\r\n    </tbody>\r\n  </table>\r\n    </div>)\r\n}\r\nexport default ListTodos;"]},"metadata":{},"sourceType":"module"}